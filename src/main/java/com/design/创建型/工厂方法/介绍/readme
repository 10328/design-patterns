我们为什么需要工厂模式?
    解耦：把对象的创建和使用分离
    可复用：对创建复杂过程比较复杂的对象,并且很多地方都会用到此对象,那么我们就需要通过工厂模式增强此对象创建的代码复用性
    降低成本：由于复杂对象通过工厂进行统一管理,此时只需要修改工厂内部的对象创建过程就可以维护对象,整体成本降低。
工厂模式(Factory)理论
    工厂方法模式
        工厂方法模式是简单工厂模式的进一步深化,在工厂方法模式中,不会像简单工厂模式一样,通过一个工厂来完成所有对象的创建,
        而是针对不同的对象提供不同的工厂,也就是说每个对象都有一个对应的工厂。
    什么时候用工厂方法模式？
        1· 一个类不需要知道它所需要的对象的类,但只需要知道具体类的对应工厂类
        2· 一个类通过其子类来决定创建那个对象,工厂类只需要提供一个创建产品的接口
        3· 将创建对象的任务委托给多个工厂的任意子类创建,也可以动态指定由那个工厂的子类创建
    优点：
        · 一个调用者想创建一个对象,只需要知道其名称就可以实现
        · 扩展性较高,如果要增加一个产品,只需要扩展一个工厂类就可以实现
        · 对调用者屏蔽产品具体实现,调用者只需要关注接口
    缺点：
        · 当我们需要扩展增加产品时，都需要增加一个具体类和一个具体实现工厂，这样系统中类的数据会进行倍增，一定的程度上增加了系统的复杂度，
            同时增加了系统具体类的依赖。
    简单工厂模式和工厂方法模式对比总结：
            基于这个设计思想,当对象的创建逻辑比较复杂,不只是简单的new一下就可以,而是要组合其他类对象,做各种初始化操作的时候,
            我们推荐使用工厂方法模式,将复杂的创建逻辑拆分到多个工厂类中,让每个工厂类都不至于过于复杂。
            而使用简单工厂模式,将所有的创建逻辑都放到一个工厂类中,会导致这个工厂类变得很复杂。